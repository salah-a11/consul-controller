---
{{- if eq (toString .Values.controller.enabled) "true"}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "consul-release-controller.fullname" .}}
  namespace: {{.Release.Namespace | quote}}
  labels:
    {{- include "consul-release-controller.labels" . | nindent 4}}
spec:
  {{- if not .Values.controller.autoscaling.enabled}}
  replicas: {{.Values.controller.replicaCount}}
  {{- end }}
  selector:
    matchLabels:
      {{- include "consul-release-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        'consul.hashicorp.com/connect-inject': 'true'
        'consul.hashicorp.com/transparent-proxy': 'false'
        'consul.hashicorp.com/connect-service-upstreams': "{{ include "consul-release-controller.fullname" . }}-upstreams:18080"
        {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "consul-release-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "consul-release-controller.serviceAccountName" . }}
      automountServiceAccountToken: true
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.controller.additional_init_containers }}
        {{- toYaml .Values.controller.additional_init_containers | nindent 12 }}
        {{- end }}
        {{- if eq (toString .Values.autoEncrypt.enabled) "true" }}
        {{- toYaml .Values.autoEncrypt.init_container | nindent 12 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.container_config.image.repository }}:{{ .Values.controller.container_config.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.container_config.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9443
              protocol: TCP
            - name: metrics
              containerPort: 9102
              protocol: TCP
          volumeMounts:
            - name: tls-secret
              mountPath: /tmp/serving-certs
            {{- if .Values.controller.container_config.additional_volume_mounts }}
            {{- toYaml .Values.controller.container_config.additional_volume_mounts | nindent 12 }}
            {{- end }}
            {{- if eq (toString .Values.autoEncrypt.enabled) "true" }}
            {{- toYaml .Values.autoEncrypt.controller_volume_mounts | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /v1/ready
              port: http
              scheme: HTTPS
          resources:
            {{- toYaml .Values.controller.container_config.resources | nindent 12 }}
          env:
            - name: TLS_CERT
              value: /tmp/serving-certs/tls.crt
            - name: TLS_KEY
              value: /tmp/serving-certs/tls.key
            - name: UPSTREAMS
              value: "http://localhost:18080"
            - name: ENABLE_KUBERNETES
              value: "true"
            {{- if eq (toString .Values.autoEncrypt.enabled) "false" }}
            {{- toYaml .Values.controller.container_config.hostEnv | nindent 12 }}
            {{- end }}
            {{- if .Values.controller.container_config.env }}
            {{- toYaml .Values.controller.container_config.env | nindent 12 }}
            {{- end }}
            {{- if eq (toString .Values.autoEncrypt.enabled) "true" }}
            {{- toYaml .Values.autoEncrypt.env | nindent 12 }}
            {{- end }}
            {{- if (and .Values.acls.secretName .Values.acls.secretKey) }}
            - name: CONSUL_HTTP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.acls.secretName }}
                  key: {{ .Values.acls.secretKey }}
            {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tls-secret
          secret:
            secretName: consul-release-controller-certificate
        {{- if .Values.controller.additional_volumes }}
        {{- toYaml .Values.controller.additional_volumes | nindent 8 }}
        {{- end }}
        {{- if eq (toString .Values.autoEncrypt.enabled) "true" }}
        {{- toYaml .Values.autoEncrypt.additional_volumes | nindent 8 }}
        {{- end }}
{{- end }}
